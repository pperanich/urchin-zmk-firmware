/*
* 34-Key Split (3x5 + 2 thumbs/side) — ZMK keymap
* Layers: BASE, EXT (extend/nav/edit), SYM (symbols), NUM (numpad)
*
* BASE: QWERTY + four hold-taps (W=Esc, X=Tab, I=Bsp, ,=Enter)
* EXT:  Nav (HJKL-style arrows), PgUp/PgDn, Home/End, Vol±, Esc/Tab/Bsp/Del, REP*, Enter, Num
* SYM:  Punct/Operators with vertical pairs (quotes/brackets/parens), mods row, pipe/underscore etc., Num
* NUM:  Calculator layout (7-8-9 / 4-5-6 / 0-1-2-3), left-hand mods row
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* ---- Layer indices ---- */
#define BASE 0
#define EXT  1
#define SYM  2
#define NUM  3

/ {
  /* ---- Helper behaviors ---- */
  behaviors {
    /* Generic hold-tap for "hold-preferred" actions (hold = arg0, tap = arg1) */
    qt: quick_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "QUICK_TAP";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <200>;
      bindings = <&kp>, <&kp>;
    };

    /* Repeat last keypress (ZMK behavior); if unavailable, replace uses with &kp AGAIN */
    rep: rep {
      compatible = "zmk,behavior-key-repeat";
      label = "KEY_REPEAT";
      #binding-cells = <0>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    /* ========================== BASE (QWERTY) ========================== *
    * Yellow-tagged hold-taps from the SVG:
    *   - W: hold ESC / tap w
    *   - X: hold TAB / tap x
    *   - I: hold BSPC / tap i
    *   - ,: hold ENTER / tap ,
      * Thumbs in the SVG (left→right):  EXT, SPACE, SHIFT, SYM
      */
      base_layer {
        label = "BASE";
        bindings = <
          /* L0 */   &kp Q      &qt ESC W   &kp E       &kp R        &kp T            &kp Y       &kp U        &qt BSPC I  &kp O      &kp P
          /* L1 */   &kp A      &kp S       &kp D       &kp F        &kp G            &kp H       &kp J        &kp K       &kp L      &kp SEMI
          /* L2 */   &kp Z      &qt TAB X   &kp C       &kp V        &kp B            &kp N       &kp M        &qt ENTER COMMA &kp DOT  &kp SLASH
          /* TH */   &mo EXT                 &kp SPACE                                &kp LSHFT               &mo SYM
        >;
      };

      /* ===================== EXT (Extend / Nav / Edit) =================== *
      * Left half: Vol−/Vol+, Ctrl/Alt/Cmd/Shift, Esc/Tab/REP*
      * Right half: Home/PgDn/PgUp/End, ←↓↑→ + Bsp, REP*/Enter/Del
      * Bottom right has ENT and NUM keys (per SVG)
      */
      ext_layer {
        label = "EXT";
        bindings = <
          /* L0 */   &trans     &trans      &kp C_VOL_DN  &kp C_VOL_UP  &trans         &kp HOME    &kp PG_DN    &kp PG_UP   &kp END    &trans
          /* L1 */   &kp LCTRL  &kp LALT    &kp LGUI      &kp LSHFT     &trans         &kp LEFT    &kp DOWN     &kp UP      &kp RIGHT  &kp BSPC
          /* L2 */   &kp ESC    &trans      &trans        &kp TAB       &rep           &rep        &kp ENTER    &trans      &trans     &kp DEL
          /* TH */   &trans                   &trans                                  &kp ENTER               &mo NUM
        >;
      };

      /* ============================ SYM (Symbols) ======================== *
      * Left half (vertical pairs):
      *   Row0: ! @ # $ %
      *   Row1: ' ~ { ( [
      *   Row2: < > } ) ]
      * Right half:
      *   Row0: ^ & * - ;
      *   Row1: :  SHIFT  CMD  ALT  CTRL
      *   Row2: |  _      =    +    \
      * Bottom has a NUM key (left of right thumb cluster in the SVG)
      */
      sym_layer {
        label = "SYM";
        bindings = <
          /* L0 */   &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5)   &kp LS(N6) &kp LS(N7)  &kp LS(N8) &kp MINUS   &kp SEMI
          /* L1 */   &kp SQUOT  &kp LS(GRAVE) &kp LS(LBRC) &kp LS(N9) &kp LBRC &kp LS(SEMI) &kp LSHFT &kp LGUI   &kp LALT   &kp LCTRL
          /* L2 */   &kp LS(COMMA) &kp LS(DOT) &kp LS(RBRC) &kp LS(N0) &kp RBRC  &kp LS(BSLH) &kp LS(MINUS) &kp EQUAL &kp LS(EQUAL) &kp BSLH
          /* TH */   &mo NUM                     &trans                                   &trans                &trans
        >;
      };

      /* ============================ NUM (Numpad) ========================= *
      * Right hand calculator layout:
      *   7 8 9
      *   4 5 6
      *   0 1 2 3
      * Left hand second row has: ALT, CMD, SHIFT (per SVG)
      */
      num_layer {
        label = "NUM";
        bindings = <
          /* L0 */   &trans     &trans     &trans     &trans     &trans        &trans   &kp N7    &kp N8    &kp N9    &trans
          /* L1 */   &kp LCTRL  &kp LALT   &kp LGUI   &kp LSHFT  &trans        &trans   &kp N4    &kp N5    &kp N6    &trans
          /* L2 */   &trans     &trans     &trans     &trans     &trans        &kp N0   &kp N1    &kp N2    &kp N3    &trans
          /* TH */   &trans                 &trans                               &trans              &trans
        >;
      };
  };
  /* ============================ FUN (Function) ========================= *
  * Right hand calculator layout:
  *   F7 F8 F9 F10
  *   F4 F5 F6 F11
  *   F1 F2 F3 F12
  * Left hand second row has: ALT, CMD, SHIFT (per SVG)
  */
  num_layer {
    label = "FUN";
    bindings = <
      /* L0 */   &trans     &trans     &trans     &trans     &trans        &trans   &kp F7    &kp F8    &kp F9    &kp F10
      /* L1 */   &kp LCTRL  &kp LALT   &kp LGUI   &kp LSHFT  &trans        &trans   &kp F4    &kp F5    &kp F6    &kp F11
      /* L2 */   &trans     &trans     &trans     &trans     &trans        &trans   &kp F1    &kp F2    &kp F3    &kp F12
      /* TH */   &trans                 &trans                               &trans              &trans
    >;
  };
};
